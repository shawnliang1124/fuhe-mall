<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.fuhe.mall.pay.mapper.FhPayChannelMapper">
  <resultMap id="BaseResultMap" type="cn.fuhe.mall.pay.entity.FhPayChannel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="channel_name" jdbcType="VARCHAR" property="channelName" />
    <result column="channel_id" jdbcType="VARCHAR" property="channelId" />
    <result column="mer_id" jdbcType="BIGINT" property="merId" />
    <result column="sync_url" jdbcType="VARCHAR" property="syncUrl" />
    <result column="asyc_url" jdbcType="VARCHAR" property="asycUrl" />
    <result column="public_key" jdbcType="VARCHAR" property="publicKey" />
    <result column="private_key" jdbcType="VARCHAR" property="privateKey" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, channel_name, channel_id, mer_id, sync_url, asyc_url, public_key, private_key, 
    `state`, version, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="cn.fuhe.mall.pay.entity.FhPayChannelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fh_pay_channel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fh_pay_channel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fh_pay_channel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.fuhe.mall.pay.entity.FhPayChannelExample">
    delete from fh_pay_channel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.fuhe.mall.pay.entity.FhPayChannel" useGeneratedKeys="true">
    insert into fh_pay_channel (channel_name, channel_id, mer_id, 
      sync_url, asyc_url, public_key, 
      private_key, `state`, version, 
      create_time, update_time)
    values (#{channelName,jdbcType=VARCHAR}, #{channelId,jdbcType=VARCHAR}, #{merId,jdbcType=BIGINT}, 
      #{syncUrl,jdbcType=VARCHAR}, #{asycUrl,jdbcType=VARCHAR}, #{publicKey,jdbcType=VARCHAR}, 
      #{privateKey,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, #{version,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.fuhe.mall.pay.entity.FhPayChannel" useGeneratedKeys="true">
    insert into fh_pay_channel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="channelName != null">
        channel_name,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="merId != null">
        mer_id,
      </if>
      <if test="syncUrl != null">
        sync_url,
      </if>
      <if test="asycUrl != null">
        asyc_url,
      </if>
      <if test="publicKey != null">
        public_key,
      </if>
      <if test="privateKey != null">
        private_key,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="channelName != null">
        #{channelName,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=VARCHAR},
      </if>
      <if test="merId != null">
        #{merId,jdbcType=BIGINT},
      </if>
      <if test="syncUrl != null">
        #{syncUrl,jdbcType=VARCHAR},
      </if>
      <if test="asycUrl != null">
        #{asycUrl,jdbcType=VARCHAR},
      </if>
      <if test="publicKey != null">
        #{publicKey,jdbcType=VARCHAR},
      </if>
      <if test="privateKey != null">
        #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.fuhe.mall.pay.entity.FhPayChannelExample" resultType="java.lang.Long">
    select count(*) from fh_pay_channel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fh_pay_channel
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.channelName != null">
        channel_name = #{record.channelName,jdbcType=VARCHAR},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=VARCHAR},
      </if>
      <if test="record.merId != null">
        mer_id = #{record.merId,jdbcType=BIGINT},
      </if>
      <if test="record.syncUrl != null">
        sync_url = #{record.syncUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.asycUrl != null">
        asyc_url = #{record.asycUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.publicKey != null">
        public_key = #{record.publicKey,jdbcType=VARCHAR},
      </if>
      <if test="record.privateKey != null">
        private_key = #{record.privateKey,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fh_pay_channel
    set id = #{record.id,jdbcType=INTEGER},
      channel_name = #{record.channelName,jdbcType=VARCHAR},
      channel_id = #{record.channelId,jdbcType=VARCHAR},
      mer_id = #{record.merId,jdbcType=BIGINT},
      sync_url = #{record.syncUrl,jdbcType=VARCHAR},
      asyc_url = #{record.asycUrl,jdbcType=VARCHAR},
      public_key = #{record.publicKey,jdbcType=VARCHAR},
      private_key = #{record.privateKey,jdbcType=VARCHAR},
      `state` = #{record.state,jdbcType=TINYINT},
      version = #{record.version,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.fuhe.mall.pay.entity.FhPayChannel">
    update fh_pay_channel
    <set>
      <if test="channelName != null">
        channel_name = #{channelName,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=VARCHAR},
      </if>
      <if test="merId != null">
        mer_id = #{merId,jdbcType=BIGINT},
      </if>
      <if test="syncUrl != null">
        sync_url = #{syncUrl,jdbcType=VARCHAR},
      </if>
      <if test="asycUrl != null">
        asyc_url = #{asycUrl,jdbcType=VARCHAR},
      </if>
      <if test="publicKey != null">
        public_key = #{publicKey,jdbcType=VARCHAR},
      </if>
      <if test="privateKey != null">
        private_key = #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.fuhe.mall.pay.entity.FhPayChannel">
    update fh_pay_channel
    set channel_name = #{channelName,jdbcType=VARCHAR},
      channel_id = #{channelId,jdbcType=VARCHAR},
      mer_id = #{merId,jdbcType=BIGINT},
      sync_url = #{syncUrl,jdbcType=VARCHAR},
      asyc_url = #{asycUrl,jdbcType=VARCHAR},
      public_key = #{publicKey,jdbcType=VARCHAR},
      private_key = #{privateKey,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=TINYINT},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>